<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
    			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	default-autowire="byName">
    
	<bean id="dataSourceNewCenter" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="filters" value="mergeStat,wall,stat,log4j" />
		<property name="url" value="${onlineSession.url}" />
		<property name="username" value="${onlineSession.username}" />
		<property name="password" value="${onlineSession.password}" />
		<property name="maxActive" value="${onlineSession.maxActive}" />
	    <property name="initialSize" value="${onlineSession.initialSize}" />
	    <property name="maxWait" value="${onlineSession.maxWait}" />
	    <property name="minIdle" value="${onlineSession.minIdle}" />
	    <property name="timeBetweenEvictionRunsMillis" value="${onlineSession.timeBetweenEvictionRunsMillis}" />
	    <property name="minEvictableIdleTimeMillis" value="${onlineSession.minEvictableIdleTimeMillis}" />
	    <property name="validationQuery" value="SELECT 'x' from dual" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="${onlineSession.maxPoolPreparedStatementPerConnectionSize}" />
	    <property name="proxyFilters">
	        <list>
	            <ref bean="stat-filter" />
	        </list>
	    </property>
	</bean>
	
	
	<bean id="sqlSessionFactoryNewCenter" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceNewCenter" />
		<property name="configLocation" value="classpath:config/mybatis/mybatis-config.xml" />
	</bean>
	
	<!-- SqlSessionTemplate保证了使用spring的当前的事务 -->
	<!-- <bean id="sqlSessionNewCenter" class="org.mybatis.spring.SqlSessionTemplate">-->
	<!-- 	<constructor-arg index="0" ref="sqlSessionFactoryNewCenter" />-->
		<!-- <constructor-arg index="1" value="BATCH" /> -->
	<!-- </bean>-->

	<!-- 自动扫描 mapper 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ele.system.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryNewCenter"></property>
	</bean>
	
    <bean id="transactionManagerCommon" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceNewCenter" />
	</bean>
	
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	    <property name="logSlowSql" value="true" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManagerNewCenter" proxy-target-class="true" />
	
	
</beans>
